CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE EXTENSION IF NOT EXISTS unaccent;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE applications (
        id uuid NOT NULL,
        application_type character varying(50) DEFAULT (''),
        client_id character varying(100) NOT NULL,
        client_secret character varying(500) DEFAULT (''),
        client_type character varying(50) DEFAULT (''),
        concurrency_token character varying(50),
        consent_type character varying(50) DEFAULT (''),
        display_name character varying(200) DEFAULT (''),
        display_names character varying(2000) DEFAULT ('{}'),
        json_web_key_set text DEFAULT ('{}'),
        permissions character varying(2000) DEFAULT ('[]'),
        post_logout_redirect_uris text DEFAULT ('[]'),
        properties text DEFAULT ('{}'),
        redirect_uris text DEFAULT ('[]'),
        requirements character varying(2000) DEFAULT ('[]'),
        settings text DEFAULT ('{}'),
        CONSTRAINT pk_applications PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE categories (
        id uuid NOT NULL,
        name character varying(100) NOT NULL,
        slug character varying(150) NOT NULL,
        description character varying(500) NOT NULL DEFAULT (''),
        parent_id uuid,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        has_discounts_applied boolean NOT NULL,
        CONSTRAINT pk_categories PRIMARY KEY (id),
        CONSTRAINT fk_categories_categories_parent_id FOREIGN KEY (parent_id) REFERENCES categories (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE client_roles (
        role_name text NOT NULL,
        client_id text NOT NULL,
        id uuid NOT NULL,
        CONSTRAINT pk_client_roles PRIMARY KEY (client_id, role_name)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE customers (
        id uuid NOT NULL,
        user_name character varying(200),
        first_name character varying(200) NOT NULL,
        last_name character varying(200),
        full_name character varying(500) NOT NULL,
        birth_date date,
        gender character varying(50) DEFAULT ('UNSPECIFIED'),
        email character varying(100),
        phone_number character varying(20),
        ref_user_id text,
        level_type character varying(50) NOT NULL DEFAULT ('SILVER'),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_customers PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE data_protection_keys (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        friendly_name text,
        xml text,
        CONSTRAINT pk_data_protection_keys PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE discounts (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        slug character varying(150) NOT NULL,
        code character varying(100) NOT NULL,
        description character varying(500) DEFAULT (''),
        discount_type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        discount_value numeric,
        discount_unit character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        min_order_value numeric,
        max_discount_amount numeric,
        start_date timestamp with time zone,
        end_date timestamp with time zone,
        is_active boolean NOT NULL DEFAULT TRUE,
        limitation_times integer,
        limitation_type character varying(50) DEFAULT ('UNSPECIFIED'),
        discount_usage_history jsonb NOT NULL DEFAULT ('[]'),
        discount_id uuid,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        has_discounts_applied boolean NOT NULL,
        CONSTRAINT pk_discounts PRIMARY KEY (id),
        CONSTRAINT fk_discounts_discounts_discount_id FOREIGN KEY (discount_id) REFERENCES discounts (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE merchants (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        slug character varying(150) NOT NULL,
        merchant_number text,
        description character varying(500) DEFAULT (''),
        is_active boolean NOT NULL DEFAULT TRUE,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_merchants PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE permission_groups (
        id uuid NOT NULL,
        name character varying(100) NOT NULL DEFAULT (''),
        description character varying(200) DEFAULT (''),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_permission_groups PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE product_attributes (
        id uuid NOT NULL,
        name character varying(100) NOT NULL,
        predefined boolean NOT NULL,
        is_active boolean NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_product_attributes PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE roles (
        id uuid NOT NULL,
        predefined boolean NOT NULL,
        description character varying(200) DEFAULT (''),
        permissions text[] NOT NULL,
        enabled boolean NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        name character varying(50) NOT NULL DEFAULT (''),
        normalized_name character varying(50) NOT NULL DEFAULT (''),
        concurrency_stamp text,
        CONSTRAINT pk_roles PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE scopes (
        id uuid NOT NULL,
        concurrency_token character varying(50),
        description character varying(200) DEFAULT (''),
        descriptions character varying(2000) DEFAULT ('{}'),
        display_name character varying(200) DEFAULT (''),
        display_names character varying(2000) DEFAULT ('{}'),
        name character varying(100) DEFAULT (''),
        properties text DEFAULT ('{}'),
        resources character varying(2000) DEFAULT ('[]'),
        CONSTRAINT pk_scopes PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE users (
        id uuid NOT NULL,
        first_name character varying(50) DEFAULT (''),
        last_name character varying(50) DEFAULT (''),
        full_name character varying(100) DEFAULT (''),
        gender character varying(20) NOT NULL DEFAULT ('UNSPECIFIED'),
        birth_date DATE,
        picture character varying(500) DEFAULT (''),
        status character varying(50) NOT NULL DEFAULT ('NEW'),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        user_name character varying(50) NOT NULL,
        normalized_user_name character varying(50) NOT NULL,
        email character varying(50) DEFAULT (''),
        normalized_email character varying(50) DEFAULT (''),
        email_confirmed boolean NOT NULL,
        password_hash character varying(500),
        security_stamp character varying(50) DEFAULT (''),
        concurrency_stamp character varying(50),
        phone_number character varying(50) DEFAULT (''),
        phone_number_confirmed boolean NOT NULL,
        two_factor_enabled boolean NOT NULL,
        lockout_end timestamp with time zone,
        lockout_enabled boolean NOT NULL,
        access_failed_count integer NOT NULL,
        CONSTRAINT pk_users PRIMARY KEY (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE authorizations (
        id uuid NOT NULL,
        application_id uuid,
        concurrency_token character varying(50),
        created_at timestamp with time zone,
        properties text DEFAULT ('{}'),
        scopes character varying(2000) DEFAULT ('[]'),
        status character varying(50) DEFAULT (''),
        subject character varying(200) DEFAULT (''),
        type character varying(50) DEFAULT (''),
        CONSTRAINT pk_authorizations PRIMARY KEY (id),
        CONSTRAINT fk_authorizations_applications_application_id FOREIGN KEY (application_id) REFERENCES applications (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE contacts (
        id uuid NOT NULL,
        type integer NOT NULL,
        name character varying(200),
        contact_name character varying(200),
        phone_number character varying(20),
        address_info jsonb NOT NULL DEFAULT ('{}'),
        notes character varying(500),
        is_default boolean NOT NULL DEFAULT TRUE,
        customer_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_contacts PRIMARY KEY (id),
        CONSTRAINT fk_contacts_customers_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE discount_applied_to_categories (
        discount_id uuid NOT NULL,
        category_id uuid NOT NULL,
        CONSTRAINT pk_discount_applied_to_categories PRIMARY KEY (discount_id, category_id),
        CONSTRAINT fk_discount_applied_to_categories_categories_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
        CONSTRAINT fk_discount_applied_to_categories_discounts_discount_id FOREIGN KEY (discount_id) REFERENCES discounts (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE merchant_categories (
        merchant_id uuid NOT NULL,
        category_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_merchant_categories PRIMARY KEY (merchant_id, category_id),
        CONSTRAINT fk_merchant_categories_categories_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
        CONSTRAINT fk_merchant_categories_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE order_promotions (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        slug character varying(250) NOT NULL,
        start_date timestamp with time zone NOT NULL,
        end_date timestamp with time zone NOT NULL,
        merchant_id uuid NOT NULL,
        status character varying(50) NOT NULL DEFAULT ('NEW'),
        type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        max_quantity integer NOT NULL DEFAULT 0,
        min_spend numeric(19,2) NOT NULL DEFAULT 0.0,
        bundle_promotion_discount_type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        conditions jsonb NOT NULL DEFAULT ('[]'),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_order_promotions PRIMARY KEY (id),
        CONSTRAINT fk_order_promotions_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE orders (
        id uuid NOT NULL,
        order_number character varying(200) NOT NULL,
        customer_id uuid NOT NULL,
        phone_number character varying(20) NOT NULL,
        status character varying(50) NOT NULL DEFAULT ('TO_PAY'),
        payment_status character varying(50) NOT NULL DEFAULT ('UNPAID'),
        paid_at timestamp with time zone NOT NULL,
        payment_method character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        total_item_price numeric(19,2) NOT NULL,
        vat_percent numeric(6,2) NOT NULL,
        vat_price numeric(19,2) NOT NULL,
        delivery_fee numeric(19,2) NOT NULL,
        total_price numeric(19,2) NOT NULL,
        delivery_schedule timestamp with time zone NOT NULL,
        merchant_id uuid NOT NULL,
        notes character varying(500),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_orders PRIMARY KEY (id),
        CONSTRAINT fk_orders_customers_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id) ON DELETE CASCADE,
        CONSTRAINT fk_orders_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE product_promotions (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        slug character varying(250) NOT NULL,
        start_date timestamp with time zone NOT NULL,
        end_date timestamp with time zone NOT NULL,
        merchant_id uuid NOT NULL,
        status character varying(50) NOT NULL DEFAULT ('NEW'),
        type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_product_promotions PRIMARY KEY (id),
        CONSTRAINT fk_product_promotions_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE products (
        id uuid NOT NULL,
        slug character varying(150) NOT NULL,
        name character varying(100) NOT NULL,
        description text NOT NULL,
        merchant_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        has_discounts_applied boolean NOT NULL,
        CONSTRAINT pk_products PRIMARY KEY (id),
        CONSTRAINT fk_products_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE shop_collections (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        slug character varying(150) NOT NULL,
        description character varying(500) NOT NULL DEFAULT (''),
        parent_id uuid,
        merchant_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_shop_collections PRIMARY KEY (id),
        CONSTRAINT fk_shop_collections_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE,
        CONSTRAINT fk_shop_collections_shop_collections_parent_id FOREIGN KEY (parent_id) REFERENCES shop_collections (id) ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE stores (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        slug character varying(150) NOT NULL,
        store_number text,
        description character varying(500) DEFAULT (''),
        phone_number text,
        is_active boolean NOT NULL DEFAULT TRUE,
        store_address text,
        merchant_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_stores PRIMARY KEY (id),
        CONSTRAINT fk_stores_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE vouchers (
        id uuid NOT NULL,
        name character varying(200) NOT NULL,
        code character varying(150) NOT NULL,
        status character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        start_date timestamp with time zone NOT NULL,
        end_date timestamp with time zone NOT NULL,
        applied_on_type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        target_customer_type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        popular_type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        min_spend numeric(19,2) NOT NULL DEFAULT 0.0,
        max_quantity integer NOT NULL DEFAULT 0,
        max_quantity_per_user integer NOT NULL DEFAULT 1,
        type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        discount_type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        value numeric(19,2) NOT NULL DEFAULT 0.0,
        max_value numeric(19,2),
        merchant_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_vouchers PRIMARY KEY (id),
        CONSTRAINT fk_vouchers_merchants_merchant_id FOREIGN KEY (merchant_id) REFERENCES merchants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE permissions (
        id uuid NOT NULL,
        group_id uuid NOT NULL,
        value character varying(100) NOT NULL DEFAULT (''),
        name character varying(100) NOT NULL DEFAULT (''),
        description character varying(200) DEFAULT (''),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        CONSTRAINT pk_permissions PRIMARY KEY (id),
        CONSTRAINT fk_permissions_permission_groups_group_id FOREIGN KEY (group_id) REFERENCES permission_groups (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE attribute_values (
        id uuid NOT NULL,
        value character varying(200) NOT NULL,
        product_attribute_id uuid,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_attribute_values PRIMARY KEY (id),
        CONSTRAINT fk_attribute_values_product_attributes_product_attribute_id FOREIGN KEY (product_attribute_id) REFERENCES product_attributes (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE role_claims (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        role_id uuid NOT NULL,
        claim_type character varying(200) DEFAULT (''),
        claim_value character varying(200) DEFAULT (''),
        CONSTRAINT pk_role_claims PRIMARY KEY (id),
        CONSTRAINT fk_role_claims_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE security_events (
        id uuid NOT NULL,
        ip character varying(50),
        agent character varying(500),
        culture character varying(10),
        protocol character varying(10),
        schema character varying(10),
        origin character varying(50),
        uri character varying(500),
        method character varying(10),
        correlation_id character varying(100),
        application_id uuid,
        application_name character varying(100),
        tenant_id uuid,
        tenant_name character varying(100),
        user_id uuid NOT NULL,
        user_name character varying(50),
        start_time timestamp with time zone NOT NULL,
        duration integer NOT NULL,
        end_time timestamp with time zone,
        status_code integer,
        exception character varying(2000),
        old_values jsonb,
        new_values jsonb,
        remarks character varying(500),
        action character varying(50) NOT NULL DEFAULT ('OTHER'),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        CONSTRAINT pk_security_events PRIMARY KEY (id),
        CONSTRAINT fk_security_events_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE user_claims (
        id integer GENERATED BY DEFAULT AS IDENTITY,
        user_id uuid NOT NULL,
        claim_type character varying(200) DEFAULT (''),
        claim_value character varying(200) DEFAULT (''),
        CONSTRAINT pk_user_claims PRIMARY KEY (id),
        CONSTRAINT fk_user_claims_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE user_logins (
        login_provider character varying(100) NOT NULL DEFAULT (''),
        provider_key character varying(50) NOT NULL DEFAULT (''),
        provider_display_name character varying(200) DEFAULT (''),
        user_id uuid NOT NULL,
        CONSTRAINT pk_user_logins PRIMARY KEY (login_provider, provider_key),
        CONSTRAINT fk_user_logins_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE user_roles (
        user_id uuid NOT NULL,
        role_id uuid NOT NULL,
        CONSTRAINT pk_user_roles PRIMARY KEY (user_id, role_id),
        CONSTRAINT fk_user_roles_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE,
        CONSTRAINT fk_user_roles_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE user_tokens (
        user_id uuid NOT NULL,
        login_provider character varying(100) NOT NULL DEFAULT (''),
        name character varying(50) NOT NULL DEFAULT (''),
        value character varying(500) DEFAULT (''),
        CONSTRAINT pk_user_tokens PRIMARY KEY (user_id, login_provider, name),
        CONSTRAINT fk_user_tokens_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE tokens (
        id uuid NOT NULL,
        application_id uuid,
        authorization_id uuid,
        concurrency_token character varying(50),
        created_at timestamp with time zone,
        expired_at timestamp with time zone,
        payload text DEFAULT (''),
        properties text DEFAULT ('{}'),
        redeemed_at timestamp with time zone,
        reference_id character varying(100),
        status character varying(50) DEFAULT (''),
        subject character varying(200) DEFAULT (''),
        type character varying(50) DEFAULT (''),
        CONSTRAINT pk_tokens PRIMARY KEY (id),
        CONSTRAINT fk_tokens_applications_application_id FOREIGN KEY (application_id) REFERENCES applications (id),
        CONSTRAINT fk_tokens_authorizations_authorization_id FOREIGN KEY (authorization_id) REFERENCES authorizations (id)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE order_contacts (
        id uuid NOT NULL,
        contact_name character varying(200) NOT NULL,
        phone_number character varying(20) NOT NULL,
        address_info jsonb NOT NULL DEFAULT ('{}'),
        notes character varying(500),
        order_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_order_contacts PRIMARY KEY (id),
        CONSTRAINT fk_order_contacts_orders_order_id FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE order_status_trackings (
        id uuid NOT NULL,
        order_id uuid NOT NULL,
        order_status character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_order_status_trackings PRIMARY KEY (id),
        CONSTRAINT fk_order_status_trackings_orders_order_id FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE payment_method_trackings (
        id uuid NOT NULL,
        payment_method character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        value numeric(19,2) NOT NULL,
        order_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_payment_method_trackings PRIMARY KEY (id),
        CONSTRAINT fk_payment_method_trackings_orders_order_id FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE discount_applied_to_products (
        discount_id uuid NOT NULL,
        product_id uuid NOT NULL,
        CONSTRAINT pk_discount_applied_to_products PRIMARY KEY (discount_id, product_id),
        CONSTRAINT fk_discount_applied_to_products_discounts_discount_id FOREIGN KEY (discount_id) REFERENCES discounts (id) ON DELETE CASCADE,
        CONSTRAINT fk_discount_applied_to_products_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE order_promotion_items (
        id uuid NOT NULL,
        order_promotion_id uuid NOT NULL,
        product_id uuid NOT NULL,
        is_active boolean NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_order_promotion_items PRIMARY KEY (id),
        CONSTRAINT fk_order_promotion_items_order_promotions_order_promotion_id FOREIGN KEY (order_promotion_id) REFERENCES order_promotions (id) ON DELETE CASCADE,
        CONSTRAINT fk_order_promotion_items_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE product_product_attributes (
        product_id uuid NOT NULL,
        product_attribute_id uuid NOT NULL,
        CONSTRAINT pk_product_product_attributes PRIMARY KEY (product_id, product_attribute_id),
        CONSTRAINT fk_product_product_attributes_product_attributes_product_attri FOREIGN KEY (product_attribute_id) REFERENCES product_attributes (id) ON DELETE CASCADE,
        CONSTRAINT fk_product_product_attributes_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE product_variants (
        id uuid NOT NULL,
        stock integer NOT NULL DEFAULT 0,
        price numeric(19,2) NOT NULL DEFAULT 0.0,
        product_id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_product_variants PRIMARY KEY (id),
        CONSTRAINT fk_product_variants_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE shop_collection_product (
        shop_collection_id uuid NOT NULL,
        product_id uuid NOT NULL,
        id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_shop_collection_product PRIMARY KEY (shop_collection_id, product_id),
        CONSTRAINT fk_shop_collection_product_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE,
        CONSTRAINT fk_shop_collection_product_shop_collections_shop_collection_id FOREIGN KEY (shop_collection_id) REFERENCES shop_collections (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE voucher_product (
        voucher_id uuid NOT NULL,
        product_id uuid NOT NULL,
        id uuid NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_voucher_product PRIMARY KEY (voucher_id, product_id),
        CONSTRAINT fk_voucher_product_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE,
        CONSTRAINT fk_voucher_product_vouchers_voucher_id FOREIGN KEY (voucher_id) REFERENCES vouchers (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE order_items (
        id uuid NOT NULL,
        order_id uuid NOT NULL,
        product_id uuid,
        product_variant_id uuid,
        quantity integer NOT NULL DEFAULT 0,
        product_name character varying(200) NOT NULL,
        product_description character varying(100) NOT NULL,
        list_price numeric(19,2) NOT NULL,
        unit_price numeric(19,2) NOT NULL,
        total_price numeric(19,2) NOT NULL,
        vat_percent numeric(6,2) NOT NULL,
        vat_price numeric(19,2) NOT NULL,
        total_vat_price numeric(19,2) NOT NULL,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_order_items PRIMARY KEY (id),
        CONSTRAINT fk_order_items_orders_order_id FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE,
        CONSTRAINT fk_order_items_product_variants_product_variant_id FOREIGN KEY (product_variant_id) REFERENCES product_variants (id) ON DELETE CASCADE,
        CONSTRAINT fk_order_items_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE order_promotion_sub_items (
        id uuid NOT NULL,
        order_promotion_id uuid NOT NULL,
        product_id uuid NOT NULL,
        product_variant_id uuid,
        is_active boolean NOT NULL,
        type character varying(50) NOT NULL DEFAULT ('UNSPECIFIED'),
        discount_price numeric(19,2) NOT NULL DEFAULT 0.0,
        discount_percentage numeric(19,2) NOT NULL DEFAULT 0.0,
        no_products_per_order_limit character varying(50) NOT NULL DEFAULT ('SPECIFIC'),
        max_items_per_order integer NOT NULL DEFAULT 1,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_order_promotion_sub_items PRIMARY KEY (id),
        CONSTRAINT fk_order_promotion_sub_items_order_promotions_order_promotion_ FOREIGN KEY (order_promotion_id) REFERENCES order_promotions (id) ON DELETE CASCADE,
        CONSTRAINT fk_order_promotion_sub_items_product_variants_product_variant_ FOREIGN KEY (product_variant_id) REFERENCES product_variants (id),
        CONSTRAINT fk_order_promotion_sub_items_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE product_promotion_items (
        id uuid NOT NULL,
        product_promotion_id uuid NOT NULL,
        product_id uuid NOT NULL,
        product_variant_id uuid,
        is_active boolean NOT NULL,
        list_price numeric(19,2) NOT NULL DEFAULT 0.0,
        discount_price numeric(19,2) NOT NULL DEFAULT 0.0,
        discount_percentage numeric(19,2) NOT NULL DEFAULT 0.0,
        quantity integer NOT NULL DEFAULT 0,
        no_products_per_order_limit integer NOT NULL,
        max_items_per_order integer NOT NULL DEFAULT 0,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_product_promotion_items PRIMARY KEY (id),
        CONSTRAINT fk_product_promotion_items_product_promotions_product_promotio FOREIGN KEY (product_promotion_id) REFERENCES product_promotions (id) ON DELETE CASCADE,
        CONSTRAINT fk_product_promotion_items_product_variants_product_variant_id FOREIGN KEY (product_variant_id) REFERENCES product_variants (id) ON DELETE CASCADE,
        CONSTRAINT fk_product_promotion_items_products_product_id FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE TABLE product_variant_attribute_values (
        id uuid NOT NULL,
        product_variant_id uuid NOT NULL,
        product_attribute_id uuid NOT NULL,
        value character varying(200) NOT NULL,
        attribute_value_id uuid,
        created_by uuid,
        created_at timestamp with time zone NOT NULL,
        updated_by uuid,
        updated_at timestamp with time zone,
        CONSTRAINT pk_product_variant_attribute_values PRIMARY KEY (id),
        CONSTRAINT ak_product_variant_attribute_values_product_variant_id_product UNIQUE (product_variant_id, product_attribute_id),
        CONSTRAINT fk_product_variant_attribute_values_attribute_values_attribute FOREIGN KEY (attribute_value_id) REFERENCES attribute_values (id) ON DELETE CASCADE,
        CONSTRAINT fk_product_variant_attribute_values_product_attributes_product FOREIGN KEY (product_attribute_id) REFERENCES product_attributes (id) ON DELETE CASCADE,
        CONSTRAINT fk_product_variant_attribute_values_product_variants_product_v FOREIGN KEY (product_variant_id) REFERENCES product_variants (id) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_applications_client_id ON applications (client_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_attribute_values_product_attribute_id ON attribute_values (product_attribute_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_authorizations_application_id_status_subject_type ON authorizations (application_id, status, subject, type);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_categories_parent_id ON categories (parent_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_contacts_customer_id ON contacts (customer_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_discount_applied_to_categories_category_id ON discount_applied_to_categories (category_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_discount_applied_to_categories_discount_id ON discount_applied_to_categories (discount_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_discount_applied_to_products_discount_id ON discount_applied_to_products (discount_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_discount_applied_to_products_product_id ON discount_applied_to_products (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_discounts_code ON discounts (code);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_discounts_discount_id ON discounts (discount_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_merchant_categories_category_id ON merchant_categories (category_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_order_contacts_order_id ON order_contacts (order_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_items_order_id ON order_items (order_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_items_product_id ON order_items (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_items_product_variant_id ON order_items (product_variant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_promotion_items_order_promotion_id ON order_promotion_items (order_promotion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_promotion_items_product_id ON order_promotion_items (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_promotion_sub_items_order_promotion_id ON order_promotion_sub_items (order_promotion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_promotion_sub_items_product_id ON order_promotion_sub_items (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_promotion_sub_items_product_variant_id ON order_promotion_sub_items (product_variant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_promotions_merchant_id ON order_promotions (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_order_status_trackings_order_id ON order_status_trackings (order_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_orders_customer_id ON orders (customer_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_orders_merchant_id ON orders (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_orders_order_number ON orders (order_number);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_payment_method_trackings_order_id ON payment_method_trackings (order_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_permissions_group_id ON permissions (group_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_permissions_value ON permissions (value) INCLUDE (name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_product_attributes_product_attribute_id ON product_product_attributes (product_attribute_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_promotion_items_product_id ON product_promotion_items (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_promotion_items_product_promotion_id ON product_promotion_items (product_promotion_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_promotion_items_product_variant_id ON product_promotion_items (product_variant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_promotions_merchant_id ON product_promotions (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_variant_attribute_values_attribute_value_id ON product_variant_attribute_values (attribute_value_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_variant_attribute_values_product_attribute_id ON product_variant_attribute_values (product_attribute_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_product_variants_product_id ON product_variants (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_products_merchant_id ON products (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_role_claims_role_id ON role_claims (role_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_roles_normalized_name ON roles (normalized_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_scopes_name ON scopes (name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_security_events_user_id ON security_events (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_shop_collection_product_product_id ON shop_collection_product (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_shop_collections_merchant_id ON shop_collections (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_shop_collections_parent_id ON shop_collections (parent_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_shop_collections_slug ON shop_collections (slug);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_stores_merchant_id ON stores (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_tokens_application_id_status_subject_type ON tokens (application_id, status, subject, type);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_tokens_authorization_id ON tokens (authorization_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_tokens_reference_id ON tokens (reference_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_user_claims_user_id ON user_claims (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_user_logins_user_id ON user_logins (user_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_user_roles_role_id ON user_roles (role_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_users_normalized_email ON users (normalized_email);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE UNIQUE INDEX ix_users_normalized_user_name ON users (normalized_user_name);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_users_phone_number ON users (phone_number);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_voucher_product_product_id ON voucher_product (product_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    CREATE INDEX ix_vouchers_merchant_id ON vouchers (merchant_id);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "migration_id" = '20240923061431_Initialize') THEN
    INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
    VALUES ('20240923061431_Initialize', '8.0.1');
    END IF;
END $EF$;
COMMIT;

